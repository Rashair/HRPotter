@using HRPotter.Helpers;
@model HRPotter.Models.JobOffer

@{
    ViewData["Title"] = "Details";
}

<style>
    label {
        font-weight: bold;
    }
</style>

    <div class="row ml-0">
        <h1 class="col-sm-12">@Model.JobTitle</h1>
        <div class="col-sm-8">
            <div class="offer-description" id="previewMarkdown">
                @Model.Description
            </div>
        </div>
        <div class="col-sm-4">
            <div class="offer-details">
                <div>
                    <label>Company:</label>
                    <span>@Model.Company.Name</span>
                </div>
                <div>
                    <label>Location:</label>
                    <span>@Model.Location</span>
                </div>
                @if (Model.SalaryFrom.HasValue || Model.SalaryTo.HasValue)
                {
                    <div>
                        <label>Salary</label>
                        <span>
                            @Html.DisplayFor(item => item.SalaryFrom)

                            @(Model.SalaryTo.HasValue && Model.SalaryFrom.HasValue ? "-" : "")

                            @Html.DisplayFor(item => item.SalaryTo) (PLN)
                        </span>
                    </div>
                }
                <div>
                    <label>Created:</label>
                    <span> @Html.DisplayFor(item => item.Created) </span>
                </div>
                @if (Model.ValidUntil.HasValue)
                {
                    <div>
                        <label>Valid:</label>
                        <span>@Model.ValidUntil.Value.Subtract(DateTime.Now).Days days (@Model.ValidUntil)</span>
                    </div>
                }
                <div>
                    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary" })
                    @using (Html.BeginForm("Delete", "JobOffers", new { Model.Id }, FormMethod.Post, null, new { style = "display:inline;" }))
                    {
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger">Delete</button>
                    }
                </div>
            </div>
        </div>
        @Html.ActionLink("Go back to Job Offers", "IndexHR", "JobOffers", null, new { @class = "btn btn-primary" })
    </div>

    @if (Model.JobApplications.Any())
    {
        <table class="mt-5 ml-0 table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Email
                    </th>
                    <th>
                        Status
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.JobApplications)
                {
                    <tr>
                        <td>
                            <a asp-controller="JobApplications" asp-action="Details" asp-route-id="@item.Id"> @item.FirstName @item.LastName </a>
                        </td>
                        <td>
                            @item.Email
                        </td>
                        <td class=@(item.Status == ApplicationStatus.Approved ? "text-success" : item.Status==ApplicationStatus.Rejected ? "text-danger" : "")>
                            @item.Status.GetDescription()
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    }
