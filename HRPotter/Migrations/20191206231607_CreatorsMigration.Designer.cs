// <auto-generated />
using System;
using HRPotter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HRPotter.Migrations
{
    [DbContext(typeof(HRPotterContext))]
    [Migration("20191206231607_CreatorsMigration")]
    partial class CreatorsMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HRPotter.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Microsoft"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Google"
                        },
                        new
                        {
                            Id = 4,
                            Name = "EBR-IT"
                        });
                });

            modelBuilder.Entity("HRPotter.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("CvUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsStudent")
                        .HasColumnType("bit");

                    b.Property<int>("JobOfferId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("JobOfferId");

                    b.HasIndex("LastName");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatorId = 2,
                            Description = "lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum",
                            Email = "johnson@nsa.gov",
                            FirstName = "Stefan",
                            IsStudent = false,
                            JobOfferId = 2,
                            LastName = "Johnson",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatorId = 2,
                            Email = "smith@nsa.gov",
                            FirstName = "Bogdan",
                            IsStudent = false,
                            JobOfferId = 3,
                            LastName = "Smith",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatorId = 2,
                            CvUrl = "https://www.google.com/",
                            Email = "miller@nsa.gov",
                            FirstName = "Ambroży",
                            IsStudent = true,
                            JobOfferId = 5,
                            LastName = "Miller",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatorId = 7,
                            Email = "jones@nsa.gov",
                            FirstName = "Bogusław",
                            IsStudent = false,
                            JobOfferId = 6,
                            LastName = "Jones",
                            Phone = "555444333",
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatorId = 7,
                            Email = "wilson@nsa.gov",
                            FirstName = "Lech",
                            IsStudent = false,
                            JobOfferId = 1,
                            LastName = "Wilson",
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatorId = 7,
                            Email = "williams@nsa.gov",
                            FirstName = "Orfeusz",
                            IsStudent = false,
                            JobOfferId = 2,
                            LastName = "Williams",
                            Phone = "222333111",
                            Status = 1
                        });
                });

            modelBuilder.Entity("HRPotter.Models.JobOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalaryFrom")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryTo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("JobTitle");

                    b.ToTable("JobOffers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 654, DateTimeKind.Local).AddTicks(3837),
                            CreatorId = 6,
                            Description = "lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum",
                            JobTitle = "Backend Developer",
                            Location = "Warsaw",
                            SalaryTo = 15000
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 2,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(8145),
                            CreatorId = 4,
                            Description = "lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum",
                            JobTitle = "Frontend Developer",
                            Location = "Warsaw",
                            SalaryFrom = 10000,
                            ValidUntil = new DateTime(2019, 12, 17, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(8195)
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9349),
                            CreatorId = 6,
                            JobTitle = "Manager",
                            Location = "New York",
                            SalaryFrom = 15000,
                            SalaryTo = 25000,
                            ValidUntil = new DateTime(2019, 12, 12, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9363)
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 3,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9389),
                            CreatorId = 4,
                            Description = "lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum",
                            JobTitle = "Teacher",
                            Location = "Paris",
                            SalaryFrom = 10000,
                            SalaryTo = 15000
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 4,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9400),
                            CreatorId = 4,
                            Description = "lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum",
                            JobTitle = "Cook",
                            Location = "Venice",
                            SalaryFrom = 10000,
                            SalaryTo = 15000
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9452),
                            CreatorId = 6,
                            JobTitle = "Manager",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 2,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9456),
                            CreatorId = 6,
                            JobTitle = "Tst1",
                            Location = "Venice",
                            SalaryFrom = 4000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9460),
                            CreatorId = 6,
                            JobTitle = "Tst2",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9463),
                            CreatorId = 6,
                            JobTitle = "Tst3",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9468),
                            CreatorId = 6,
                            JobTitle = "Tst4",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9472),
                            CreatorId = 6,
                            JobTitle = "Tst5",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9476),
                            CreatorId = 6,
                            JobTitle = "Tst6",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 13,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9480),
                            CreatorId = 6,
                            JobTitle = "Tst7",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 14,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9483),
                            CreatorId = 6,
                            JobTitle = "Tst8",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        },
                        new
                        {
                            Id = 15,
                            CompanyId = 1,
                            Created = new DateTime(2019, 12, 7, 0, 16, 6, 656, DateTimeKind.Local).AddTicks(9487),
                            CreatorId = 6,
                            JobTitle = "Tst9",
                            Location = "Venice",
                            SalaryFrom = 15000,
                            SalaryTo = 25000
                        });
                });

            modelBuilder.Entity("HRPotter.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HRUser"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("HRPotter.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("B2CKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("B2CKey")
                        .IsUnique()
                        .HasFilter("[B2CKey] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            B2CKey = "c3513236-6bcd-4443-bcc3-f39edb2a372b",
                            Name = "admin",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 2,
                            B2CKey = "48243631-2f99-4553-88f5-8dd9a07a92e3",
                            Name = "testUser",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            B2CKey = "701dcb7e-0a16-46f5-a846-d5a06cbd774c",
                            Name = "stefan",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 6,
                            B2CKey = "6fa35afc-2051-424b-9d4d-b4933c023081",
                            Name = "hr1",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 7,
                            B2CKey = "879cc927-1809-47a6-a0c2-ee4f76815b15",
                            Name = "test1",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("HRPotter.Models.JobApplication", b =>
                {
                    b.HasOne("HRPotter.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.HasOne("HRPotter.Models.JobOffer", "JobOffer")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HRPotter.Models.JobOffer", b =>
                {
                    b.HasOne("HRPotter.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRPotter.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("HRPotter.Models.User", b =>
                {
                    b.HasOne("HRPotter.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
